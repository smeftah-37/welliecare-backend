# docker-compose.yml (Updated with Redis)
version: '3.8'

services:
  postgres:
    container_name: welliecare
    image: postgis/postgis:15-3.3-alpine
    env_file:
      - .env
    volumes:
      - postgres:/var/lib/postgresql/postgres
      - ./init-postgis.sql:/docker-entrypoint-initdb.d/init-postgis.sql
    ports:
      - "5432:5432"
    networks:
      - welliecare_net
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - welliecare_net
    restart: unless-stopped


  backend:
    image: node:lts-alpine
    container_name: backend
    working_dir: /app
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_HOST=welliecare # This matches the postgres service name
    volumes:
      - ./backend:/app
      - ./backend/keys:/app/keys
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - welliecare_net
    depends_on:
      - postgres
      - redis  # Backend depends on Redis
    entrypoint: sh -c "npm install && npm run start:dev"


networks:
  welliecare_net:
    driver: bridge

volumes:
  postgres:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './postgres'
  redis_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './redis-data'
  backend:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './backend'

